%YAML:1.0

#common parameters
# 接收IMU和图像的topic，imu_topic在节点/vins_estimator中被订阅，进行预积分
imu_topic: "/imu0"
# image_topic在节点/feature_tracker中被订阅，进行角点的光流跟踪
image_topic: "/cam0/image_raw"
# 输出文件地址(如果文件夹不存在则不输出)，输出 VINS的运行轨迹 "/vins_result_no_loop.csv, /vins_result_loop.csv"
# 以及相机与IMU的外参估计"/extrinsic_parameter.csv"
output_path: "/home/shaozu/output/"

#camera calibration 
# 相机模型 PINHOLE针孔相机、KANNALA_BRANDT（某种鱼眼相机模型）
model_type: PINHOLE
camera_name: camera
image_width: 752
image_height: 480
# 相机的畸变参数（如果是鱼眼相机还要求 mu mv u0 v0）
distortion_parameters:
   k1: -2.917e-01
   k2: 8.228e-02
   p1: 5.333e-05
   p2: -1.578e-04
# 相机内参（标定获取较准确的结果）
projection_parameters:
   fx: 4.616e+02
   fy: 4.603e+02
   cx: 3.630e+02
   cy: 2.481e+02

# Extrinsic parameter between IMU and Camera.
# IMU和相机外参：旋转矩阵Ric、平移向量t_ic都表示从相机到IMU坐标系的变换
# 0：外参比较准确，之后不需要优化
# 1: 外参是一个估计值，后续将其作为初始值放入非线性优化中
# 2: 不知道外参，需要进行标定
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.0148655429818, -0.999880929698, 0.00414029679422,
           0.999557249008, 0.0149672133247, 0.025715529948, 
           -0.0257744366974, 0.00375618835797, 0.999660727178]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.0216401454975,-0.064676986768, 0.00981073058949]

#feature traker paprameters
# max_cnt进行特征光流跟踪时保持的特征点数量
max_cnt: 150            # max feature number in feature tracking
# 两个相邻特征之间像素点的最小间隔，目的是保证图像中均匀的特征分布
min_dist: 30            # min distance between two features 
# 控制图像跟踪的发布频率
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
# ransac算法的门限值
F_threshold: 1.0        # ransac threshold (pixel)
# 将经过特征跟踪的图像发布
show_track: 1           # publish tracking image as topic
# 如果图像整体太亮或太暗，则需要进行直方图均衡化
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
# 鱼眼相机一般需要圆形的mask，以去除外部噪声点
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
# ceres优化器的最大迭代时间和最大迭代次数，以保证实时性
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00004         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
# 地图重用，通过载入先前的位姿图文件实现
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
# 用于高实时性或大地图、持续时间长的地图
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/shaozu/output/pose_graph/" # save and load path

#unsynchronization parameters
# 在线时差校准
# 大多数相机和IMU不是时间同步的，将estimate_td设置为1可以在线估计相机和IMU之间的时间差
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
# 支持卷帘相机
# 0 全局曝光相机 1 卷帘曝光相机
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
# 保存在位姿图中的图像，0则关闭
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
# 输出IMU前向递推的角度预测值，一般用于低延迟和高频率的应用下
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
# 在RVIZ中显示相机模型的大小
visualize_camera_size: 0.4      # size of camera marker in RVIZ
